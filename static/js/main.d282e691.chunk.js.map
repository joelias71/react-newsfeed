{"version":3,"sources":["components/SidebarData.js","data/axios.js","actions/actions.js","util/date.js","components/Navbar.js","container/NewsContainer.js","components/Card.js","components/Page.js","components/Footer.js","App.js","serviceWorker.js","reducers/reducer.js","store.js","index.js"],"names":["SidebarData","title","path","icon","cName","value","instance","axios","create","baseURL","fetchData","id","cleanup","uri","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","getTodayDate","dispatch","get","then","response","setDataFromService","catch","error","setError","data","type","setTitle","toast","configure","NavbarContainer","connect","searchData","props","useState","input","setInput","sidebar","setSidebar","showSidebar","search","length","info","position","POSITION","BOTTOM_RIGHT","className","to","onClick","placeholder","onKeyDown","e","key","searchByEnter","onChange","target","style","cursor","map","item","index","NewsList","Component","useEffect","Card","img","img_url","date","day","src","alt","line","element","truncate","text","source_name","href","url","PageContainer","state","news","offset","setOffset","numOfPages","Math","ceil","sliceList","slice","news_id","getContent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","Footer","App","exact","Page","Boolean","window","location","hostname","match","combineReducers","action","list","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"ydASaA,EAAc,CACvB,CACIC,MAAO,SACPC,KAAM,IACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,eAEX,CACIH,MAAO,cACPC,KAAM,WACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,GAEX,CACIJ,MAAO,kBACPC,KAAM,iBACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,GAEX,CACIJ,MAAO,gBACPC,KAAM,cACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,GAEX,CACIJ,MAAO,kBACPC,KAAM,iBACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,GAEX,CACIJ,MAAO,WACPC,KAAM,SACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,GAEX,CACIJ,MAAO,YACPC,KAAM,UACNC,KAAM,kBAAC,IAAD,MACNC,MAAO,cACPC,MAAO,I,iDCjDAC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iCCIAC,EAAY,SAAAC,GAIrB,GAFAC,IAEU,QAAPD,EAAc,CACb,IAAME,EAAMF,EAAG,iBAAD,OAAmBA,GAAnB,iBCbM,WACxB,IAAIG,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cAEjB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,YAAwBJ,GDO8BQ,IAElD,OAAO,SAAAC,GACHlB,EAAMmB,IAAIb,GACTc,MAAK,SAAAC,GAAQ,OAAIH,EAASI,EAAmBD,OAC7CE,OAAM,SAAAC,GAAK,OAAIN,EAASO,EAASD,QAGtC,OAAO,SAAAN,GACHA,EAASO,EAAS,yBAgBjBH,EAAqB,SAAAI,GAC9B,MAAO,CACHC,KArC6B,wBAsC7BD,SAIKrB,EAAU,WACnB,MAAO,CACHsB,KAzCe,YA6CVC,EAAW,SAAAlC,GACpB,MAAO,CACHiC,KAjDiB,YAkDjBjC,UAIK+B,EAAW,SAAAD,GACpB,MAAO,CACHG,KAvDqB,gBAwDrBH,U,cEjDRK,IAAMC,YAgEN,IAYeC,EALSC,YACpB,MARuB,SAACd,GACxB,MAAO,CACHe,WAAY,SAAAnC,GAAK,OAAIoB,EFnDH,SAAApB,GAItB,OAFAO,IAEO,SAAAa,GACHlB,EAAMmB,IAAN,iBAAoBrB,IACnBsB,MAAK,SAAAC,GAAQ,OAAIH,EAASI,EAAmBD,OAC7CE,OAAM,SAAAC,GAAK,OAAIN,EAASO,EAASD,QE4CJS,CAAWnC,KACzC8B,SAAU,SAAAlC,GAAK,OAAIwB,EAASU,EAASlC,QAIrBsC,EAtExB,SAAgBE,GAAQ,IAAD,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGWF,oBAAS,GAHpB,mBAGZG,EAHY,KAGHC,EAHG,KAKbC,EAAc,kBAAMD,GAAYD,IAQhCG,EAAS,WACRL,EAAMM,OAAS,GACdR,EAAMD,WAAWG,GACjBF,EAAMN,SAAN,uBAA4BQ,KAE5BP,IAAMc,KAAK,4CAA6C,CACpDC,SAAUf,IAAMgB,SAASC,gBAKrC,OACI,oCACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAAUD,UAAU,oBAAoBE,QAAST,KAErD,wCACA,yBAAKO,UAAU,kBACX,2BAAOpB,KAAK,OACLuB,YAAY,SACZpD,MAAOsC,EACPe,UAAW,SAAAC,GAAC,OA5Bb,SAAAA,GACJ,UAAVA,EAAEC,KACFZ,IA0B+Ba,CAAcF,IAC9BG,SAAU,SAAAH,GAAC,OAAIf,EAASe,EAAEI,OAAO1D,UACxC,kBAAC,IAAD,CAAYmD,QAAS,kBAAMR,KAAUgB,MAAO,CAACC,OAAQ,eAG7D,yBAAKX,UAAWT,EAAU,qBAAuB,eAC7C,wBAAIS,UAAU,sBACV,wBAAIA,UAAU,8BACV,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAAWD,UAAU,yBAAyBE,QAAST,MAG9D/C,EAAYkE,KAAI,SAACC,EAAKC,GACnB,OACI,wBAAIR,IAAKQ,EAAOd,UAAWa,EAAK/D,MAAOoD,QAAST,GAC5C,kBAAC,IAAD,CAAMQ,GAAIY,EAAKjE,MACViE,EAAKhE,KACN,8BAAOgE,EAAKlE,kB,OCnDhD,IAYeoE,EALE9B,YACb,MARuB,SAACd,GACxB,MAAO,CACHf,UAAW,SAAAC,GAAE,OAAIc,EAASf,EAAUC,KACpCwB,SAAU,SAAAlC,GAAK,OAAIwB,EAASU,EAASlC,QAI5BsC,EAjBjB,YAAsE,IAA7CtC,EAA4C,EAA5CA,MAAOU,EAAqC,EAArCA,GAAI2D,EAAiC,EAAjCA,UAAWnC,EAAsB,EAAtBA,SAAUzB,EAAY,EAAZA,UAOrD,OALA6D,qBAAU,WACN7D,EAAUC,GACVwB,EAASlC,KACV,CAACS,EAAWyB,EAAUxB,EAAIV,IAEtB,kBAACqE,EAAD,S,yBCiBIE,MAvBf,YAAyB,IAATL,EAAQ,EAARA,KAENM,EAAsB,MAAhBN,EAAKO,QAAkB,oBAAuBP,EAAKO,QACzDC,EHCa,SAACA,GACpB,IAAIC,EAAM,IAAI7D,KAAY,IAAP4D,GACf3D,EAAKC,OAAO2D,EAAI1D,WAAWC,SAAS,EAAG,KACvCC,EAAKH,OAAO2D,EAAIvD,WAAa,GAAGF,SAAS,EAAG,KAC5CG,EAAOsD,EAAIrD,cAEf,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,YAAwBJ,GGPXE,CAAQiD,EAAKQ,MAE1B,OACI,yBAAKrB,UAAU,YACX,yBAAKuB,IAAKJ,EAAKK,IAAKX,EAAKlE,QACzB,yBAAKqD,UAAU,kBACX,kBAAC,IAAD,CACIyB,KAAM,EACNC,QAAQ,KACRC,SAAS,MACTC,KAAMf,EAAKlE,QAEf,4BAAK0E,GACL,4BAAKR,EAAKgB,aACV,uBAAGC,KAAMjB,EAAKkB,KAAd,iB,yBCwBhB,IAYeC,EAJO/C,aARE,SAACgD,GACrB,MAAO,CACHtD,KAAMsD,EAAMC,KACZzD,MAAOwD,EAAMxD,MACb9B,MAAOsF,EAAMtF,SAICsC,EAhDtB,YAAmC,IAApBN,EAAmB,EAAnBA,KAAKF,EAAc,EAAdA,MAAM9B,EAAQ,EAARA,MAAQ,EAEFyC,mBAAS,GAFP,mBAEvB+C,EAFuB,KAEfC,EAFe,KAGVC,EAAaC,KAAKC,KAAK5D,EAAKgB,OAAhC,IAchB,OACI,yBAAKK,UAAU,kBACX,wBAAIA,UAAU,yBAA0BrD,GACxC,yBAAKqD,UAAU,wBAfJ,WACf,IAAMwC,EAAY7D,EAAK8D,MAAMN,EAAQA,EAHzB,IAKZ,OAAG1D,EACQ,4BAAKA,GACU,IAAhBE,EAAKgB,OACJ,2CAEA6C,EAAU5B,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMP,IAAKO,EAAK6B,QAAS7B,KAAMA,OAQtD8B,IAEN,kBAAC,IAAD,CACIC,cAAe,OACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWX,EACXY,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc,SAAA9C,GAAC,OAAI+B,EA5Bf,GA4ByB/B,EAAE+C,WAC/BC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,e,MC7BlBC,MARf,WACI,OACI,yBAAKxD,UAAU,UACX,8DC0BGyD,MAxBf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACG/G,EAAYkE,KAAI,SAACC,EAAKC,GACrB,OACE,kBAAC,IAAD,CAAO4C,OAAK,EAAC9G,KAAI,0BAAqBiE,EAAKjE,MAAQ0D,IAAKQ,GACtD,kBAAC,EAAD,CAAenE,MAAOkE,EAAKlE,MAAOqE,UAAW2C,EAAMtG,GAAIwD,EAAK9D,YAIlE,kBAAC,IAAD,CAAO2G,OAAK,EAAC9G,KAAK,sBAAsB0D,IAAI,cAC1C,kBAAC,EAAD,CAAe3D,MAAM,YAAYqE,UAAW2C,EAAMtG,GAAG,SAEvD,kBAAC,IAAD,CAAU4C,GAAG,UAEf,kBAAC,EAAD,SCdY2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCiBSC,cAAgB,CAC3B/B,KAjCS,WAAyB,IAAxBvD,EAAuB,uDAAhB,GAAKuF,EAAW,uCAEjC,GTFiC,0BSE9BA,EAAOtF,KAAgC,CAItC,IAAMuF,EAAOD,EAAOvF,KAAKA,KAAK8D,MAAM,EAAG,KAEvC,OAAO0B,EAGX,MTRmB,YSQhBD,EAAOtF,KAAyB,GAE5BD,GAqBPhC,MAlBU,WAAyC,IAAxCA,EAAuC,uDAA/B,sBAAoBuH,EAAW,uCAClD,MThBqB,cSgBlBA,EAAOtF,KACCsF,EAAOvH,MAGXA,GAcP8B,MAXU,WAA2B,IAA1BA,EAAyB,uDAAjB,KAAMyF,EAAW,uCACpC,MTvByB,kBSuBtBA,EAAOtF,KACCsF,EAAOzF,MAGXA,K,QC5BE2F,EAAQC,YAAYC,EAASC,YAAgBC,MCI1DC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,QAGJQ,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3G,MAAK,SAAA4G,GACJA,EAAaC,gBAEd1G,OAAM,SAAAC,GACL0G,QAAQ1G,MAAMA,EAAM2G,c","file":"static/js/main.d282e691.chunk.js","sourcesContent":["import React from 'react'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance'\r\nimport PublicIcon from '@material-ui/icons/Public'\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac'\r\nimport MovieIcon from '@material-ui/icons/Movie'\r\nimport SportsVolleyballIcon from '@material-ui/icons/SportsVolleyball'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Inicio',\r\n        path: '/',\r\n        icon: <HomeIcon />,\r\n        cName: 'navbar-text'\r\n    },\r\n    {\r\n        title: 'Política',\r\n        path: '/politic',\r\n        icon: <AccountBalanceIcon />,\r\n        cName: 'navbar-text',\r\n        value: 1\r\n    },\r\n    {\r\n        title: 'Internacionales',\r\n        path: '/international',\r\n        icon: <PublicIcon />,\r\n        cName: 'navbar-text',\r\n        value: 2\r\n    },\r\n    {\r\n        title: 'Tecnología',\r\n        path: '/technology',\r\n        icon: <LaptopMacIcon />,\r\n        cName: 'navbar-text',\r\n        value: 3\r\n    },\r\n    {\r\n        title: 'Espectáculos',\r\n        path: '/entertainment',\r\n        icon: <MovieIcon />,\r\n        cName: 'navbar-text',\r\n        value: 4\r\n    },\r\n    {\r\n        title: 'Deportes',\r\n        path: '/sport',\r\n        icon: <SportsVolleyballIcon />,\r\n        cName: 'navbar-text',\r\n        value: 5\r\n    },\r\n    {\r\n        title: 'Diseño',\r\n        path: '/design',\r\n        icon: <BrushIcon />,\r\n        cName: 'navbar-text',\r\n        value: 6\r\n    }\r\n]\r\n","import axios from 'axios'\r\n\r\n/** base url to make requests to all the news */\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.canillitapp.com/'\r\n})\r\n\r\nexport default instance","import axios from '../data/axios'\r\nimport { getTodayDate } from '../util/date'\r\n\r\nexport const SET_DATA_FROM_SERVICE = 'SET_DATA_FROM_SERVICE'\r\nexport const SET_TITLE = 'SET_TITLE'\r\nexport const SERVICE_ERROR = 'SERVICE_ERROR'\r\nexport const CLEANUP = 'CLEANUP'\r\n\r\nexport const fetchData = id => {\r\n\r\n    cleanup()\r\n\r\n    if(id !== '404') {\r\n        const uri = id? `news/category/${id}` : `latest/${getTodayDate()}`\r\n\r\n        return dispatch => {\r\n            axios.get(uri)\r\n            .then(response => dispatch(setDataFromService(response)))\r\n            .catch(error => dispatch(setError(error)))\r\n        }\r\n    } else {\r\n        return dispatch => {\r\n            dispatch(setError('Ruta no encontrada'))\r\n        }\r\n    }\r\n}\r\n\r\nexport const searchData = value => {\r\n\r\n    cleanup()\r\n\r\n    return dispatch => {\r\n        axios.get(`search/${value}`)\r\n        .then(response => dispatch(setDataFromService(response)))\r\n        .catch(error => dispatch(setError(error)))\r\n    }\r\n}\r\n\r\nexport const setDataFromService = data => {\r\n    return {\r\n        type: SET_DATA_FROM_SERVICE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const cleanup = () => {\r\n    return {\r\n        type: CLEANUP\r\n    }\r\n}\r\n\r\nexport const setTitle = title => {\r\n    return {\r\n        type: SET_TITLE,\r\n        title\r\n    }\r\n}\r\n\r\nexport const setError = error => {\r\n    return {\r\n        type: SERVICE_ERROR,\r\n        error\r\n    }\r\n}\r\n","export const getTodayDate = () => {\r\n    let today = new Date()\r\n    let dd = String(today.getDate()).padStart(2, '0')\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0')\r\n    let yyyy = today.getFullYear()\r\n\r\n    return `${yyyy}-${mm}-${dd}`\r\n}\r\n\r\nexport const getDate = (date) => {\r\n    let day = new Date(date * 1000)\r\n    let dd = String(day.getDate()).padStart(2, '0')\r\n    let mm = String(day.getMonth() + 1).padStart(2, '0')\r\n    let yyyy = day.getFullYear()\r\n\r\n    return `${yyyy}-${mm}-${dd}`\r\n}","import React, {useState} from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { SidebarData } from './SidebarData'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { connect } from 'react-redux'\r\nimport { searchData, setTitle } from '../actions/actions'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure()\r\nfunction Navbar(props) {\r\n\r\n    const [input, setInput] = useState('')\r\n    const [sidebar, setSidebar] = useState(false)\r\n\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    const searchByEnter = e => {\r\n        if (e.key === 'Enter') {\r\n            search()\r\n        }\r\n    }\r\n\r\n    const search = () => {\r\n        if(input.length > 2) {\r\n            props.searchData(input)\r\n            props.setTitle(`Búsqueda: ${input}`)\r\n        } else {\r\n            toast.info('Tienes que escribir al menos 3 caracteres', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='navbar' >\r\n                <Link to='#' >\r\n                    <MenuIcon className='navbar__menu-bars' onClick={showSidebar} />\r\n                </Link>\r\n                <h1>Noticias</h1>\r\n                <div className='navbar__center'>\r\n                    <input type='text' \r\n                           placeholder=\"Buscar\" \r\n                           value={input} \r\n                           onKeyDown={e => searchByEnter(e)}\r\n                           onChange={e => setInput(e.target.value)} />\r\n                    <SearchIcon onClick={() => search()} style={{cursor: 'pointer'}} />\r\n                </div>\r\n            </div>\r\n            <nav className={sidebar ? 'navbar-menu active' : 'navbar-menu'}>\r\n                <ul className='navbar-menu__items'>\r\n                    <li className='navbar-menu__items__toggle' >\r\n                        <Link to='#' >\r\n                            <CloseIcon className='navbar-menu__menu-bars' onClick={showSidebar} />\r\n                        </Link>\r\n                    </li>\r\n                    {SidebarData.map((item,index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName} onClick={showSidebar} >\r\n                                <Link to={item.path} >\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchData: value => dispatch(searchData(value)),\r\n        setTitle: title => dispatch(setTitle(title))\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Navbar)\r\n\r\nexport default NavbarContainer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchData, setTitle } from '../actions/actions'\r\n\r\nfunction NewsContainer({ title, id, Component, setTitle, fetchData}) {\r\n    \r\n    useEffect(() => {\r\n        fetchData(id)\r\n        setTitle(title)\r\n    }, [fetchData, setTitle, id, title])\r\n\r\n    return <Component />\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: id => dispatch(fetchData(id)),\r\n        setTitle: title => dispatch(setTitle(title))\r\n    }\r\n}\r\n\r\nconst NewsList = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(NewsContainer)\r\n\r\nexport default NewsList\r\n","import React from 'react'\r\nimport './Card.css'\r\nimport TextTruncate from 'react-text-truncate'\r\nimport { getDate } from '../util/date'\r\n\r\nfunction Card({ item }) {\r\n    \r\n    const img = item.img_url == null ? './img/default.png'  : item.img_url\r\n    const date = getDate(item.date)\r\n    \r\n    return (\r\n        <div className='newsCard' >\r\n            <img src={img} alt={item.title} />\r\n            <div className='newsCard__info' >\r\n                <TextTruncate \r\n                    line={2}\r\n                    element='h2'\r\n                    truncate='...'\r\n                    text={item.title}\r\n                />\r\n                <h4>{date}</h4>\r\n                <h3>{item.source_name}</h3>\r\n                <a href={item.url}>Ver más</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,{useState} from 'react'\r\nimport Card from '../components/Card'\r\nimport './Page.css'\r\nimport { connect } from 'react-redux'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nfunction Page({data,error,title}) {\r\n\r\n    const [offset, setOffset] = useState(0)\r\n    const perPage = 12, numOfPages = Math.ceil(data.length / perPage)\r\n    \r\n    const getContent = () => {\r\n        const sliceList = data.slice(offset, offset + perPage)        \r\n\r\n        if(error) {\r\n            return <h1>{error}</h1>\r\n        } else if(data.length === 0) {\r\n            return <h1>Loading ...</h1>\r\n        } else {\r\n            return sliceList.map(item => <Card key={item.news_id} item={item} />)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='news-container' >\r\n            <h1 className='news-container__title' >{title}</h1>\r\n            <div className='news-container__list' >\r\n                { getContent() }\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'prev'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={numOfPages}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={e => setOffset(e.selected * perPage)}\r\n                containerClassName={'pagination'}\r\n                subContainerClassName={'pages pagination'}\r\n                activeClassName={'active'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.news,\r\n        error: state.error,\r\n        title: state.title\r\n    }\r\n}\r\n\r\nconst PageContainer = connect(\r\n    mapStateToProps,\r\n)(Page)\r\n\r\nexport default PageContainer","import React from 'react'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footer'>\r\n            <p>Created by Jorge Elias | 2020</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { SidebarData } from './components/SidebarData'\r\nimport NewsContainer from './container/NewsContainer'\r\nimport Page from './components/Page'\r\nimport Footer from './components/Footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          {SidebarData.map((item,index) => {\r\n            return (\r\n              <Route exact path={`/react-newsfeed/${item.path}`} key={index}>\r\n                <NewsContainer title={item.title} Component={Page} id={item.value} />\r\n              </Route>\r\n            )\r\n          })}\r\n          <Route exact path='/react-newsfeed/404' key='fourOhFour'>\r\n            <NewsContainer title='Error 404' Component={Page} id='404' />\r\n          </Route>\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { SET_DATA_FROM_SERVICE, SET_TITLE, SERVICE_ERROR, CLEANUP } from '../actions/actions'\r\n\r\nconst news = (data = [],  action) => {\r\n\r\n    if(action.type === SET_DATA_FROM_SERVICE) {\r\n        //get the first 100 elements of the api, \r\n        //because sometimes it returns mora than 2k\r\n        //elements and gets slow\r\n        const list = action.data.data.slice(0, 100)\r\n\r\n        return list\r\n    }\r\n\r\n    if(action.type === CLEANUP) return []\r\n\r\n    return data\r\n}\r\n\r\nconst title = (title = 'Últimas noticias', action) => {\r\n    if(action.type === SET_TITLE) {\r\n        return action.title\r\n    }\r\n\r\n    return title\r\n}\r\n\r\nconst error = (error = null, action) => {\r\n    if(action.type === SERVICE_ERROR) {\r\n        return action.error\r\n    }\r\n\r\n    return error\r\n}\r\n\r\nexport default combineReducers({\r\n    news,\r\n    title,\r\n    error\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducers/reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './store'\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}